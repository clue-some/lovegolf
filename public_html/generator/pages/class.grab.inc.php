<?php // This file is protected by copyright law and provided under license. Reverse engineering of this file is strictly prohibited.
eval(base64_decode('?><?php
class SiteCrawler
{
function als686dKM8YR(&$a, $wpMNyvmfFEFljN, $EQPRU4873v19r1dOt0, $ZWOhZazfjErJcIhUa, $XVlGnz_S0ae)
{
global $grab_parameters;
if($a[0]=='?')$a = preg_replace('#^([^\?]*?)([^/\?]*?)(\?.*)?$#','$2',$wpMNyvmfFEFljN).$a;
if(preg_match('#^https?(:|&\#58;)#is',$a));
else if($a&&$a[0]=='/')$a = $EQPRU4873v19r1dOt0.$a;
else $a = $ZWOhZazfjErJcIhUa.$a;
$a=str_replace('/./','/',$a);
if($_GET['ddbg2'])echo "($a)<br>\n";//exit;
if(strstr($a,'../')){
preg_match('#(.*?:.*?//.*?)(/.*)$#',$a,$aa);
do{
$ap = $aa[2];
$aa[2] = preg_replace('#/?[^/]*/\.\.#','',$ap,1);
}while($aa[2]!=$ap);
$a = $aa[1].$aa[2];
}
$a = preg_replace('#/\./#','/',$a);
$a = str_replace('&#38;','&',$a);
$a = str_replace('&amp;','&',$a);
$a = preg_replace('#\#.*$#','',$a);
$a = preg_replace('#([^/\:]/)/+#','\\1',$a);
$a = preg_replace('#[\r\n]+#s','',$a);
$ius3wyOy7j = (strtolower(substr($a,0,strlen($XVlGnz_S0ae)) ) != strtolower($XVlGnz_S0ae));
return $ius3wyOy7j;
}
function NBV4NfiUeEA($aU6ABSfqGa,&$urls_completed) {
global $grab_parameters,$rs7vmVstg9ITgDp_3w3;

error_reporting(E_ALL&~E_NOTICE);
set_time_limit($grab_parameters['xs_exec_time']);
if($aU6ABSfqGa['bgexec'])
{
ignore_user_abort(true);
}
register_shutdown_function('m2XglXohmDghoh');
if(function_exists('ini_set'))
{
@ini_set("zlib.output_compression", 0);
@ini_set("output_buffering", 0);
}
$XJmpAPFm5BONY = explode(" ",microtime());
$IovbEesHM = $XJmpAPFm5BONY[0]+$XJmpAPFm5BONY[1];
$lnbhCzmYVQg4tQxP7oU = $aU6ABSfqGa['initurl'];
$WU5LiCbFvMo37OJ = $aU6ABSfqGa['maxpg']>0 ? $aU6ABSfqGa['maxpg'] : 1E10;
$IjKFto62Su1oVt = $aU6ABSfqGa['maxdepth'] ? $aU6ABSfqGa['maxdepth'] : -1;
$J11IcbVQFnQx7xn2p8K = $aU6ABSfqGa['progress_callback'];
$EtJP0NjQd5B0EIze5h = preg_replace("#\s*[\r\n]+\s*#",'|', (strstr($s=trim($grab_parameters['xs_excl_urls']),'*')?$s:preg_quote($s,'#')));
$LXM8bUtRLGd = preg_replace("#\s*[\r\n]+\s*#",'|', (strstr($s=trim($grab_parameters['xs_incl_urls']),'*')?$s:preg_quote($s,'#')));
$tXFS2IEiW6CHfr = $f28DFGIYE1KbPZ = array();
$rbkX09bMGzYXY = preg_split('#[\r\n]+#', $grab_parameters['xs_ind_attr']);
$dTPm3fku6 = '#200'.($grab_parameters['xs_allow_httpcode']?'|'.$grab_parameters['xs_allow_httpcode']:'').'#';
if($grab_parameters['xs_memsave'])
{
if(!file_exists(mMkUqqyEVxaIDqqJYYB))
mkdir(mMkUqqyEVxaIDqqJYYB, 0777);
else
if($aU6ABSfqGa['resume']=='')
AI4VEVEfNhi(mMkUqqyEVxaIDqqJYYB, '.txt');
}
foreach($rbkX09bMGzYXY as $ia)
if($ia)
{
$is = explode(',', $ia);
if($is[0][0]=='$')
$lTxkLcOwQNT8M = substr($is[0], 1);
else
$lTxkLcOwQNT8M = str_replace('\\$','$',preg_quote($is[0],'#'));
$f28DFGIYE1KbPZ[] = $lTxkLcOwQNT8M;
$tXFS2IEiW6CHfr[str_replace('$','',$is[0])]=array('lm'=>$is[1], 'f'=>$is[2], 'p'=>$is[3]);
}
if($f28DFGIYE1KbPZ)
$pExXgddV_iDPllTqcD = implode('|',$f28DFGIYE1KbPZ);
$br810uR1TmRxh9gm7Y = parse_url($lnbhCzmYVQg4tQxP7oU);
if(!$br810uR1TmRxh9gm7Y['path']){$lnbhCzmYVQg4tQxP7oU.='/';$br810uR1TmRxh9gm7Y = parse_url($lnbhCzmYVQg4tQxP7oU);}
$Jb4yAYIYPJ_O2XChTK = $rs7vmVstg9ITgDp_3w3->fetch($lnbhCzmYVQg4tQxP7oU,0,true);// the first request is to skip session id
$Jb4yAYIYPJ_O2XChTK = $rs7vmVstg9ITgDp_3w3->fetch($lnbhCzmYVQg4tQxP7oU,0,true);
$jRkCE87KImIT7H0V = !preg_match($dTPm3fku6,$Jb4yAYIYPJ_O2XChTK['code']);


if($jRkCE87KImIT7H0V)
return array(
'errmsg'=>'<b>There was an error while retrieving the URL specified:</b> '.$lnbhCzmYVQg4tQxP7oU.''.
($Jb4yAYIYPJ_O2XChTK['errormsg']?'<br><b>Error message:</b> '.$Jb4yAYIYPJ_O2XChTK['errormsg']:'').
'<br><b>HTTP headers follow:</b><br>'.implode('<br>',$Jb4yAYIYPJ_O2XChTK['headers']).
'<br><b>HTTP output:</b><br>'.$Jb4yAYIYPJ_O2XChTK['content']
,
);
$lnbhCzmYVQg4tQxP7oU = $Jb4yAYIYPJ_O2XChTK['last_url'];
$urls_completed = array();
$urls_ext = array();
$urls_404 = array();
$EQPRU4873v19r1dOt0 = $br810uR1TmRxh9gm7Y['scheme'].'://'.$br810uR1TmRxh9gm7Y['host'].((!$br810uR1TmRxh9gm7Y['port'] || ($br810uR1TmRxh9gm7Y['port']=='80'))?'':(':'.$br810uR1TmRxh9gm7Y['port']));
$pn = $tsize = 0;
$XVlGnz_S0ae = preg_replace('#([^/\:]/)/+#','\\1',$EQPRU4873v19r1dOt0.'/'.ucXhrY49PtG($br810uR1TmRxh9gm7Y['path']));
$KfeDJM83eAq3FKm2FMj = preg_replace('#^.+://[^/]+#', '', $XVlGnz_S0ae);
$W09MAceS57mE09 = $rs7vmVstg9ITgDp_3w3->fetch($lnbhCzmYVQg4tQxP7oU,0,true,true);
$uIHyA36C5Zy = str_replace($XVlGnz_S0ae,'',$lnbhCzmYVQg4tQxP7oU);
$urls_list_full = array($uIHyA36C5Zy);
if(!$uIHyA36C5Zy)$uIHyA36C5Zy='/';
$urls_list = array($uIHyA36C5Zy);
$urls_list2 = array();
$ti0x2y0ezOP2WN = array();
$links_level = 0;
$oHXUMGu3l = $ref_links = $ref_links2 = array();
$LbimQzCelV2TH = 0;


$Oy6n6JhB0ewbK = $WU5LiCbFvMo37OJ;
if(!$grab_parameters['xs_progupdate'])$grab_parameters['xs_progupdate'] = 20;
if(isset($grab_parameters['xs_robotstxt']) && $grab_parameters['xs_robotstxt'])
{
$D56QPPraXg3S = $rs7vmVstg9ITgDp_3w3->fetch($EQPRU4873v19r1dOt0.'/robots.txt');
if($EQPRU4873v19r1dOt0.'/' != $XVlGnz_S0ae)
{
$ToJUkZWtmfg = "\n".$rs7vmVstg9ITgDp_3w3->fetch($XVlGnz_S0ae.'robots.txt');
$D56QPPraXg3S['content']  .= "\n".$ToJUkZWtmfg['content'];
}
$ra=preg_split('#user-agent:\s*#im',$D56QPPraXg3S['content']);
$gnG1ovbgc5=array();
for($i=1;$i<count($ra);$i++){
preg_match('#^(\S+)(.*)$#s',$ra[$i],$CiR12GkzGJzIx);
if($CiR12GkzGJzIx[1]=='*'||strstr($CiR12GkzGJzIx[1],'google')){
preg_match_all('#^disallow:[^\r\n\S](\S*)#im',$CiR12GkzGJzIx[2],$rm);
for($pi=0;$pi<count($rm[1]);$pi++)
if($rm[1][$pi])
$gnG1ovbgc5[] = 
str_replace('\\$','$',
str_replace('\\*','.*',
preg_quote($rm[1][$pi],'#')
));
}
}
for($i=0;$i<count($gnG1ovbgc5);$i+=500)
$YOltX5jR3bV54_fW[]=implode('|', array_slice($gnG1ovbgc5, $i,500));
}else
$YOltX5jR3bV54_fW = array();
$Vnsf0wm4f_Ga9sx = $grab_parameters['xs_exc_skip']!='\\.()';
$CGztW2Q3w = $grab_parameters['xs_inc_skip']!='\\.()';
$grab_parameters['xs_inc_skip'] .= '$';
$grab_parameters['xs_exc_skip'] .= '$';
if($grab_parameters['xs_debug'])
$_GET['ddbg']=1;
$L4bR8hhpGu = 0;
$url_ind = 0;
$cnu = 1;
$pf = fopen(FahuMOvlEUZ.liDo3gbGoJngRfNWG_,'w');fclose($pf);
if($aU6ABSfqGa['resume']!=''){
$AkEsMyVukiGwg = @K2vp0UPYqxR(d0i2ccCOq(FahuMOvlEUZ.F0YVnEetj8GGCAnYTD));
echo 'Resuming the last session (last updated: '.date('Y-m-d H:i:s',$AkEsMyVukiGwg['time']).')'."\n";
if($AkEsMyVukiGwg)
extract($AkEsMyVukiGwg);
$IovbEesHM-=$ctime;
$L4bR8hhpGu = $ctime;
unset($AkEsMyVukiGwg);
}
sleep(1); @unlink(FahuMOvlEUZ.liDo3gbGoJngRfNWG_);
if($urls_list)
do {
$wpMNyvmfFEFljN = $urls_list[$url_ind++];
unset($urls_list[$url_ind-1]);
 
$BrnrDyc5WRM7 = Bm9nHOMkMvNg($wpMNyvmfFEFljN);



$Jb4yAYIYPJ_O2XChTK = array();
$cn = '';
if(isset($ti0x2y0ezOP2WN[$wpMNyvmfFEFljN]))
$wpMNyvmfFEFljN=$ti0x2y0ezOP2WN[$wpMNyvmfFEFljN];
$f = $Vnsf0wm4f_Ga9sx && preg_match('#'.$grab_parameters['xs_exc_skip'].'#i',$wpMNyvmfFEFljN);
if($EtJP0NjQd5B0EIze5h&&!$f)$f=$f||preg_match('#('.$EtJP0NjQd5B0EIze5h.')#',$wpMNyvmfFEFljN);
if($YOltX5jR3bV54_fW&&!$f)
foreach($YOltX5jR3bV54_fW as $bm)
$f = $f||preg_match('#^('.$bm.')#',$KfeDJM83eAq3FKm2FMj.$wpMNyvmfFEFljN);
$f2 = false;
if(!$f)
{
$f2 = $CGztW2Q3w && preg_match('#'.$grab_parameters['xs_inc_skip'].'#',$wpMNyvmfFEFljN);
if($LXM8bUtRLGd&&!$f2)
$f2 = $f2||(preg_match('#('.$LXM8bUtRLGd.')#',$wpMNyvmfFEFljN));
if($grab_parameters['xs_parse_only'] && !$f2 && $wpMNyvmfFEFljN!='/')
{
$f2 = $f2 || !preg_match('#'.str_replace(' ', '|', preg_quote($grab_parameters['xs_parse_only'],'#')).'#',$wpMNyvmfFEFljN);
}
}
do{

if(!$f && !$f2 && ($Oy6n6JhB0ewbK*1.2>(count($urls_list)+count($urls_completed)-$url_ind)))
{

if($IjKFto62Su1oVt<=0 || $links_level<$IjKFto62Su1oVt)
{
$ENCS30lNK = preg_replace('#([^/\:]/)/+#','\\1',$XVlGnz_S0ae.$wpMNyvmfFEFljN);


if($_GET['ddbg'])echo "<h4> { $ENCS30lNK } </h4>";flush();
$UbtdA8LAXOXV0R=0;
do {
$Jb4yAYIYPJ_O2XChTK = $rs7vmVstg9ITgDp_3w3->fetch($ENCS30lNK, 0, 1);
if($Jb4yAYIYPJ_O2XChTK['code']==403)
{
$UbtdA8LAXOXV0R++;
sleep($grab_parameters['xs_delay_ms']?$grab_parameters['xs_delay_ms']:1);
}
else $UbtdA8LAXOXV0R=5;
}while($UbtdA8LAXOXV0R<3);


if($_GET['ddbg']){echo "<hr> [[[ ".$Jb4yAYIYPJ_O2XChTK['code']." ]]] ";print_r($Jb4yAYIYPJ_O2XChTK['headers']);flush();}
$UxlcpFqGmGi_HJEDkU = is_array($Jb4yAYIYPJ_O2XChTK['headers']) ? strtolower($Jb4yAYIYPJ_O2XChTK['headers']['content-type']) : '';
if(!strstr($UxlcpFqGmGi_HJEDkU,'text/html')&&!strstr($UxlcpFqGmGi_HJEDkU,'/xhtml'))
continue;
$tyiyTTSlSh = array();


if($Jb4yAYIYPJ_O2XChTK['code']==404){
$urls_404[]=array($wpMNyvmfFEFljN,$ref_links2[$wpMNyvmfFEFljN]);
}

if($dTPm3fku6 && !preg_match($dTPm3fku6,$Jb4yAYIYPJ_O2XChTK['code']))
continue;
$cn = $Jb4yAYIYPJ_O2XChTK['content'];

$tsize+=strlen($cn);
$cn = preg_replace('#<!--(\[if IE\]>|.*?-->)#is', '',$cn);
if($grab_parameters['xs_canonical'])
if(($ENCS30lNK == $Jb4yAYIYPJ_O2XChTK['last_url'])
&& preg_match('#<link[^>]*rel="canonical"[^>]href="([^>]*?)"#', $cn, $DAIF6YYLjKE3U5))
$Jb4yAYIYPJ_O2XChTK['last_url'] = $DAIF6YYLjKE3U5[1];
$XK4ZmSeIiBnx46W = preg_replace('#^.*?'.preg_quote($XVlGnz_S0ae,'#').'#','',$Jb4yAYIYPJ_O2XChTK['last_url']);
if(($ENCS30lNK != $Jb4yAYIYPJ_O2XChTK['last_url']) && ($ENCS30lNK != $Jb4yAYIYPJ_O2XChTK['last_url'].'/')) {
$ti0x2y0ezOP2WN[$wpMNyvmfFEFljN]=$Jb4yAYIYPJ_O2XChTK['last_url']; $io=$wpMNyvmfFEFljN;
$urls_list2[] = $XK4ZmSeIiBnx46W;
if(count($ref_links[$XK4ZmSeIiBnx46W])<max(1,intval($grab_parameters['xs_maxref'])))
$ref_links[$XK4ZmSeIiBnx46W][] = $wpMNyvmfFEFljN;
continue;
}
preg_match('#<base[^>]*?href=[\'"](.*?)[\'"]#is',$cn,$bm);
if(isset($bm[1])&&$bm[1])
$ZWOhZazfjErJcIhUa = ucXhrY49PtG($bm[1].(preg_match('#//.*/#',$bm[1])?'-':'/-'));
else
$ZWOhZazfjErJcIhUa = ucXhrY49PtG($XVlGnz_S0ae.$wpMNyvmfFEFljN);

preg_match_all('#<(?:a|area|go)\s[^>]*?href\s*=\s*(?:"([^"]*)|\'([^\']*)|([^\s\">]+)).*?>#is', $cn, $am);
preg_match_all('#<i?frame\s[^>]*src\s*=\s*["\']?(.*?)("|>|\'[>\s])#is', $cn, $ZgEcCImJmeCEdk);
preg_match_all('#<meta\s[^>]*http-equiv\s*=\s*"?refresh[^>]*URL\s*=\s*["\']?(.*?)("|>|\'[>\s])#is', $cn, $nGQiFCs4pCT);
$tyiyTTSlSh = array();
for($i=0;$i<count($am[1]);$i++)
{
if( !preg_match('#rel=["\']nofollow#i', $am[0][$i]) ) 
$tyiyTTSlSh[] = $am[1][$i];
}
$tyiyTTSlSh = array_merge(
$tyiyTTSlSh,

$am[2],$am[3],  
$ZgEcCImJmeCEdk[1],$nGQiFCs4pCT[1]);
$tyiyTTSlSh = array_unique($tyiyTTSlSh);

$nn = $nt = 0;
reset($tyiyTTSlSh);
if(preg_match('#<meta name="robots" content="[^"]*?nofollow#is',$cn))
$tyiyTTSlSh = array();
foreach($tyiyTTSlSh as $i=>$ll)
if($ll)
{                    
$a = $sa = trim($ll);

if($grab_parameters['xs_proto_skip'] && 
(preg_match('#^'.$grab_parameters['xs_proto_skip'].'#i',$a)||
($Vnsf0wm4f_Ga9sx && preg_match('#'.$grab_parameters['xs_exc_skip'].'#i',$a))||
preg_match('#^'.$grab_parameters['xs_proto_skip'].'#i',function_exists('html_entity_decode')?html_entity_decode($a):$a)
))
continue;
if($grab_parameters['xs_exclude_check'])
{
$_f=$_f2=false;
$_f=$EtJP0NjQd5B0EIze5h&&preg_match('#('.$EtJP0NjQd5B0EIze5h.')#',$a);
if($YOltX5jR3bV54_fW&&!$_f)
foreach($YOltX5jR3bV54_fW as $bm)
$_f = $_f||preg_match('#^('.$bm.')#',$KfeDJM83eAq3FKm2FMj.$wpMNyvmfFEFljN);
if($_f)continue;
}
$ius3wyOy7j = $this->als686dKM8YR($a, $wpMNyvmfFEFljN, $EQPRU4873v19r1dOt0, $ZWOhZazfjErJcIhUa, $XVlGnz_S0ae);
$XK4ZmSeIiBnx46W = substr($a,strlen($XVlGnz_S0ae));
$XK4ZmSeIiBnx46W = str_replace(' ', '%20', $XK4ZmSeIiBnx46W);
if($grab_parameters['xs_cleanurls'])
$XK4ZmSeIiBnx46W = @preg_replace($grab_parameters['xs_cleanurls'],'',$XK4ZmSeIiBnx46W);
if($grab_parameters['xs_cleanpar'])
{
$XK4ZmSeIiBnx46W = @preg_replace('#[\\?\\&]('.$grab_parameters['xs_cleanpar'].')=[a-z0-9\-\_]+$#i','',$XK4ZmSeIiBnx46W);
$XK4ZmSeIiBnx46W = @preg_replace('#([\\?\\&])('.$grab_parameters['xs_cleanpar'].')=[a-z0-9\-\_]+&#i','$1',$XK4ZmSeIiBnx46W);
}
if($ius3wyOy7j)
{
if($grab_parameters['xs_extlinks'] && !$urls_ext[$a])
$urls_ext[$a] = $ENCS30lNK;
continue;
}
if($_GET['ddbg3'])echo "<u>[$a]</u><br>\n";//exit;
$urls_list2[] = $XK4ZmSeIiBnx46W;
if($grab_parameters['xs_maxref'] && count($ref_links[$XK4ZmSeIiBnx46W])<$grab_parameters['xs_maxref'])
$ref_links[$XK4ZmSeIiBnx46W][] = $wpMNyvmfFEFljN;
$nt++;
}
unset($tyiyTTSlSh);
}
}                                        


if($grab_parameters['xs_incl_only'] && !$f)
$f = $f || !preg_match('#'.str_replace(' ', '|', preg_quote($grab_parameters['xs_incl_only'],'#')).'#',$XVlGnz_S0ae.$wpMNyvmfFEFljN);
if(!$f) $f = $f||preg_match('#<meta name="robots" content="[^"]*?noindex#is',$cn);
if(!$f)
{
$edxbfpnNjHDVNG0E = array(

'link'=>preg_replace('#([^/\:]/)/+#','\\1',$XVlGnz_S0ae.$wpMNyvmfFEFljN)
);
if($grab_parameters['xs_makehtml'])
{
preg_match('#<title>(.*?)</title>#is', $Jb4yAYIYPJ_O2XChTK['content'], $HwzoRG8a2ig);
$edxbfpnNjHDVNG0E['t'] = strip_tags($HwzoRG8a2ig[1]);
}
if($grab_parameters['xs_metadesc'])
{
preg_match('#<meta\s[^>]*(?:http-equiv|name)\s*=\s*"?description[^>]*content\s*=\s*["]?([^>\"]*)#is', $cn, $eq5FTgLHKiz3zEJ8W);
if($eq5FTgLHKiz3zEJ8W[1])
$edxbfpnNjHDVNG0E['d'] = $eq5FTgLHKiz3zEJ8W[1];
}
if($grab_parameters['xs_makeror']||$grab_parameters['xs_autopriority'])
$edxbfpnNjHDVNG0E['o'] = max(0,$links_level);
if(preg_match('#('.$pExXgddV_iDPllTqcD.')#',$XVlGnz_S0ae.$wpMNyvmfFEFljN,$hii3Vf22jY4Syw))
{
$edxbfpnNjHDVNG0E['clm'] = $tXFS2IEiW6CHfr[$hii3Vf22jY4Syw[1]]['lm'];
$edxbfpnNjHDVNG0E['f'] = $tXFS2IEiW6CHfr[$hii3Vf22jY4Syw[1]]['f'];
$edxbfpnNjHDVNG0E['p'] = $tXFS2IEiW6CHfr[$hii3Vf22jY4Syw[1]]['p'];
}
if($grab_parameters['xs_imginfo'])
{
preg_match_all('#<img[^>]*src="(.*?)".*?>#is', $cn, $HIrCwvTtbgLHb, PREG_SET_ORDER);
$ai = $ae = array();
foreach($HIrCwvTtbgLHb as $im)
{
$ius3wyOy7j = $this->als686dKM8YR($im[1], $wpMNyvmfFEFljN, $EQPRU4873v19r1dOt0, $ZWOhZazfjErJcIhUa, $XVlGnz_S0ae);
if($ius3wyOy7j) 
continue;
if(!in_array($im[1], $ae))
if(!$EtJP0NjQd5B0EIze5h||!preg_match('#('.$EtJP0NjQd5B0EIze5h.')#',$im[1]))
{
$ae[] = $im[1];
preg_match('#(?:title|alt)="(.*?)"#i', $im[0], $tm);
$t =$tm[1];
$ai[] = array($im[1], $t);
}
}
if($ai)
$edxbfpnNjHDVNG0E['i'] = $ai;
}
if($grab_parameters['xs_lastmod_notparsed'] && $f2)
{
$Jb4yAYIYPJ_O2XChTK = $rs7vmVstg9ITgDp_3w3->fetch($ENCS30lNK, 0, 1, false, "", array('req'=>'HEAD'));

}
if(!$edxbfpnNjHDVNG0E['lm'] && isset($Jb4yAYIYPJ_O2XChTK['headers']['last-modified']))
$edxbfpnNjHDVNG0E['lm']=$Jb4yAYIYPJ_O2XChTK['headers']['last-modified'];
if($_GET['ddbg'])echo "((include ".$edxbfpnNjHDVNG0E['link']."))<br />";flush();
if($grab_parameters['xs_memsave'])
{
BDMQM41YCke_rGLZ($BrnrDyc5WRM7, $edxbfpnNjHDVNG0E);
$urls_completed[] = $BrnrDyc5WRM7;
}else
$urls_completed[] = $edxbfpnNjHDVNG0E;
$Oy6n6JhB0ewbK = $WU5LiCbFvMo37OJ - count($urls_completed);
}
}while(false);// zerowhile
if($url_ind>=$cnu)
{
unset($urls_list);
$url_ind = 0;
$urls_list = array_values(array_unique(array_diff($urls_list2,$urls_list_full)));
$urls_list_full = array_merge($urls_list_full,$urls_list);
$cnu = count($urls_list);
unset($ref_links2);
$ref_links2 = $ref_links;
unset($ref_links); unset($urls_list2);
$ref_links = array();
$urls_list2 = array();
$links_level++;
}
$pn++;
$XJmpAPFm5BONY=explode(" ",microtime());
$ctime = $XJmpAPFm5BONY[0]+$XJmpAPFm5BONY[1] - $IovbEesHM;
$pl=min($cnu-$url_ind,$Oy6n6JhB0ewbK);
if( ($cnu==$url_ind || $pl==0||$pn==1 || ($pn%$grab_parameters['xs_progupdate'])==0)
|| count($urls_completed)>=$WU5LiCbFvMo37OJ)
{
if(strstr($W09MAceS57mE09['content'],'header'))break;
$mu = function_exists('memory_get_usage') ? memory_get_usage() : '-';
if(intval($mu))
$mu = number_format($mu/1024,1).' Kb';
if($_GET['ddbg'])echo "(memory: $mu)<br>\n";//exit;
$urls_list2 = array_values(array_unique($urls_list2));
$MEB7AlDmHInZKDscdU = array(
$ctime, // running time
str_replace($lnbhCzmYVQg4tQxP7oU, '', $wpMNyvmfFEFljN),  // current URL
$pl,                    // urls left
$pn,                    // processed urls
$tsize,                 // bandwidth usage
$links_level,           // depth level
$mu,                    // memory usage
count($urls_completed), // added in sitemap
count($urls_list2)      // in the queue
);
if($aU6ABSfqGa['bgexec'])
E8E6h7XNoJyabA(wtDKkRJ7HxQL3k,KnX4np5EvoI8($MEB7AlDmHInZKDscdU));
if($J11IcbVQFnQx7xn2p8K && !$f)
$J11IcbVQFnQx7xn2p8K($MEB7AlDmHInZKDscdU);

}else
{
$J11IcbVQFnQx7xn2p8K(array('cmd'=>'ping', 'bg' => $aU6ABSfqGa['bgexec']));
}
if($grab_parameters['xs_savestate_time']>0 &&
( 
($ctime-$L4bR8hhpGu>$grab_parameters['xs_savestate_time'])
|| ($url_ind>=$cnu)
)
)
{
$L4bR8hhpGu = $ctime;
if($_GET['ddbg'])echo "(saving dump)<br />\n";flush();
$AkEsMyVukiGwg = compact('url_ind',
'urls_list','urls_list2','cnu',
'ref_links','ref_links2',
'urls_list_full','urls_completed',
'urls_404',
'nt','tsize','pn','links_level','ctime', 'urls_ext'
);
$AkEsMyVukiGwg['time']=time();
$wTcIzru5lxe=KnX4np5EvoI8($AkEsMyVukiGwg);
E8E6h7XNoJyabA(F0YVnEetj8GGCAnYTD,$wTcIzru5lxe);
unset($AkEsMyVukiGwg);
unset($wTcIzru5lxe);
}
if($grab_parameters['xs_delay_req'] && $grab_parameters['xs_delay_ms'] &&
(($pn%$grab_parameters['xs_delay_req'])==0))
{
sleep($grab_parameters['xs_delay_ms']);
}
if($XZRnFRi6li=file_exists($sdib5tsn4le=FahuMOvlEUZ.liDo3gbGoJngRfNWG_)){
if(@unlink($sdib5tsn4le))
break;
else
$XZRnFRi6li=0;
}
}while(
count($urls_completed)<$WU5LiCbFvMo37OJ
&&
$url_ind<$cnu
);
if($_GET['ddbgexit'])exit;
return array(
'u404'=>$urls_404,
'ctime'=>$ctime,
'tsize'=>$tsize,
'errmsg'=>'',
'initurl'=>$lnbhCzmYVQg4tQxP7oU,
'initdir'=>$XVlGnz_S0ae,
'ucount'=>count($urls_completed),
'time'=>time(),
'params'=>$aU6ABSfqGa,
'interrupt'=>$XZRnFRi6li,
'urls_ext'=>$urls_ext
);
}
}
$FZCE9otCXn84p7cZMS = new SiteCrawler();
function m2XglXohmDghoh(){
@unlink(FahuMOvlEUZ.wtDKkRJ7HxQL3k);
}
?>'));
?>